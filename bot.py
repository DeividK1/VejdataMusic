import os
import re
from pathlib import Path
from typing import Optional

import discord
from discord.ext import commands
from dotenv import load_dotenv
import yt_dlp as youtube_dl

# ---------- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ----------
# 1) –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ .env (DISCORD_TOKEN –∏ –ø–æ –∂–µ–ª–∞–Ω–∏–µ FFMPEG_PATH)
load_dotenv(dotenv_path=Path(__file__).with_name('.env'))
TOKEN = os.getenv("DISCORD_TOKEN")
if not TOKEN or len(TOKEN) < 20:
    raise RuntimeError("‚ùå DISCORD_TOKEN –ª–∏–ø—Å–≤–∞ –∏–ª–∏ –µ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∏ .env")

# 2) –ü—ä—Ç –¥–æ FFmpeg: –≤–∑–∏–º–∞–º–µ –æ—Ç .env FFMPEG_PATH, –∏–Ω–∞—á–µ fallback –∫—ä–º WinGet –ø—ä—Ç—è —Ç–∏
FFMPEG_PATH = os.getenv(
    "FFMPEG_PATH",
    r"C:\Users\admin\AppData\Local\Microsoft\WinGet\Packages\Gyan.FFmpeg_Microsoft.Winget.Source_8wekyb3d8bbwe\ffmpeg-8.0-full_build\bin\ffmpeg.exe"
)

# 3) –û–ø—Ü–∏–∏ –∑–∞ yt_dlp (—Å—Ç–∞–±–∏–ª–µ–Ω –∞—É–¥–∏–æ —Å—Ç—Ä–∏–π–º)
YTDL_OPTS = {
    "format": "bestaudio/best",
    "quiet": True,
    "noplaylist": True,        # –∏–∑–±—è–≥–≤–∞–º–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–ª–µ–π–ª–∏—Å—Ç–∏
    "default_search": "ytsearch",
    "extract_flat": False,
    "source_address": "0.0.0.0",  # –ø–æ–º–∞–≥–∞ —Å—Ä–µ—â—É –Ω—è–∫–æ–∏ CDN –ø—Ä–æ–±–ª–µ–º–∏
}
ytdl = youtube_dl.YoutubeDL(YTDL_OPTS)

# 4) FFmpeg –æ–ø—Ü–∏–∏ ‚Äì –∫–ª—é—á–æ–≤–æ –∑–∞ –∞–≤—Ç–æ-–ø–æ–≤—Ç–æ—Ä–Ω–æ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ –ø—Ä–∏ –≥–ª–∏—á–æ–≤–µ
FFMPEG_BEFORE = "-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5"
FFMPEG_OPTIONS = "-vn"  # —Å–∞–º–æ –∞—É–¥–∏–æ

# ---------- Discord –±–æ—Ç ----------
intents = discord.Intents.default()
intents.message_content = True  # –∞–∫—Ç–∏–≤–∏—Ä–∞–π –≤ Developer Portal ‚Üí Bot ‚Üí Privileged Gateway Intents
bot = commands.Bot(command_prefix='!', intents=intents)

# –º–∞–ª–∫–∞ –ø–æ–º–æ—â–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –µ URL (–∞–∫–æ –Ω–µ –µ, —â–µ —Ç—ä—Ä—Å–∏–º –≤ YouTube)
URL_RE = re.compile(r"^https?://", re.IGNORECASE)

# ---------- –ü–æ–º–æ—â–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏ ----------
def make_source(audio_url: str) -> discord.FFmpegOpusAudio:
    """–°—ä–∑–¥–∞–≤–∞ FFmpeg –∏–∑—Ç–æ—á–Ω–∏–∫ —Å –∞–≤—Ç–æ-reconnect —Ñ–ª–∞–≥–æ–≤–µ."""
    return discord.FFmpegOpusAudio(
        audio_url,
        executable=FFMPEG_PATH,
        before_options=FFMPEG_BEFORE,
        options=FFMPEG_OPTIONS
    )

def extract_first_entry(info: dict) -> dict:
    """–ê–∫–æ info –µ –ø–ª–µ–π–ª–∏—Å—Ç/—Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –æ—Ç —Ç—ä—Ä—Å–µ–Ω–µ, –≤–∑–µ–º–∏ –ø—ä—Ä–≤–∏—è –≤–∞–ª–∏–¥–µ–Ω –µ–ª–µ–º–µ–Ω—Ç."""
    if info is None:
        raise RuntimeError("–ù—è–º–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç yt_dlp")
    if "entries" in info and info["entries"]:
        return info["entries"][0]
    return info

async def ensure_voice(ctx) -> discord.VoiceClient:
    """–û—Å–∏–≥—É—Ä—è–≤–∞, —á–µ –±–æ—Ç—ä—Ç –µ –≤ –ø—Ä–∞–≤–∏–ª–Ω–∏—è –≥–ª–∞—Å–æ–≤ –∫–∞–Ω–∞–ª –∏ –µ self-deaf."""
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    author_channel = ctx.author.voice.channel
    if voice and voice.channel != author_channel:
        await voice.move_to(author_channel)
        return voice
    if not voice:
        voice = await author_channel.connect(self_deaf=True)
    return voice

# ---------- –°—ä–±–∏—Ç–∏—è ----------
@bot.event
async def on_ready():
    print(f"‚úÖ –í–ª—è–∑–æ—Ö –∫–∞—Ç–æ {bot.user}")

# ---------- –ö–æ–º–∞–Ω–¥–∏ ----------
@bot.command(help="–ü—É—Å–∫–∞ –∞—É–¥–∏–æ –æ—Ç YouTube –ª–∏–Ω–∫ –∏–ª–∏ —Ç—ä—Ä—Å–µ–Ω–µ. –ü—Ä–∏–º–µ—Ä: !play <url|—Ç–µ–∫—Å—Ç>")
@commands.cooldown(1, 2, commands.BucketType.guild)  # anti-spam
async def play(ctx, *, query: str):
    if not ctx.author.voice:
        await ctx.send("üéß –í–ª–µ–∑ –ø—ä—Ä–≤–æ –≤ –≥–ª–∞—Å–æ–≤ –∫–∞–Ω–∞–ª!")
        return

    voice = await ensure_voice(ctx)

    try:
        search_term = query if URL_RE.search(query) else f"ytsearch:{query}"
        info = ytdl.extract_info(search_term, download=False)
        info = extract_first_entry(info)

        audio_url = info["url"]
        title = info.get("title") or query

        # –∞–∫–æ –≤–µ—á–µ —Å–≤–∏—Ä–∏ ‚Äì —Å–ø–∏—Ä–∞–º–µ –ø—Ä–µ–¥–∏—à–Ω–æ—Ç–æ, –∑–∞ –¥–∞ –∏–∑–±–µ–≥–Ω–µ–º –Ω–∞—Å–ª–∞–≥–≤–∞–Ω–∏—è
        if voice.is_playing():
            voice.stop()

        source = make_source(audio_url)
        voice.play(
            source,
            after=lambda e: print("[player] done:", e) if e else print("[player] finished")
        )
        await ctx.send(f"üé∂ –ü—É—Å–∫–∞–º: **{title}**")

    except youtube_dl.utils.DownloadError as e:
        await ctx.send("‚ùå –ü—Ä–æ–±–ª–µ–º —Å –∏–∑–≤–ª–∏—á–∞–Ω–µ—Ç–æ –æ—Ç YouTube. –ü—Ä–æ–±–≤–∞–π –¥—Ä—É–≥ –ª–∏–Ω–∫/—Ç—ä—Ä—Å–µ–Ω–µ.")
        print("[yt_dlp] DownloadError:", e)
    except Exception as e:
        await ctx.send("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—ä–∑–ø—Ä–æ–∏–∑–≤–µ–∂–¥–∞–Ω–µ (–ª–∏–Ω–∫/FFmpeg/–º—Ä–µ–∂–∞).")
        print("[play ERROR]", repr(e))

@bot.command(help="–ü–∞—É–∑–∞ –Ω–∞ —Ç–µ–∫—É—â–æ—Ç–æ –∞—É–¥–∏–æ")
async def pause(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice and voice.is_playing():
        voice.pause()
        await ctx.send("‚è∏Ô∏è –ü–∞—É–∑–∞.")
    else:
        await ctx.send("‚ùå –ù–∏—â–æ –Ω–µ —Å–≤–∏—Ä–∏.")

@bot.command(help="–ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞ —Å–ª–µ–¥ –ø–∞—É–∑–∞")
async def resume(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice and voice.is_paused():
        voice.resume()
        await ctx.send("‚ñ∂Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–º.")
    else:
        await ctx.send("‚ùå –ù—è–º–∞ –ø–µ—Å–µ–Ω –Ω–∞ –ø–∞—É–∑–∞.")

@bot.command(help="–°–ø–∏—Ä–∞ —Ç–µ–∫—É—â–æ—Ç–æ –∞—É–¥–∏–æ")
async def stop(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice and voice.is_playing():
        voice.stop()
        await ctx.send("‚èπÔ∏è –°–ø—Ä—è–Ω–æ.")
    else:
        await ctx.send("‚ùå –ù–∏—â–æ –Ω–µ —Å–≤–∏—Ä–∏.")

@bot.command(help="–ë–æ—Ç—ä—Ç –Ω–∞–ø—É—Å–∫–∞ –≥–ª–∞—Å–æ–≤–∏—è –∫–∞–Ω–∞–ª")
async def leave(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice:
        await voice.disconnect(force=True)
        await ctx.send("üëã –ù–∞–ø—É—Å–∫–∞–º –∫–∞–Ω–∞–ª–∞.")
    else:
        await ctx.send("‚ùå –ù–µ —Å—ä–º –≤ –≥–ª–∞—Å–æ–≤ –∫–∞–Ω–∞–ª.")

# ---------- –°—Ç–∞—Ä—Ç ----------
if __name__ == "__main__":
    # –ø–æ–ª–µ–∑–Ω–æ –≤ –ª–æ–≥–∞ –ø—Ä–∏ –æ—Ç—Å—Ç—Ä–∞–Ω—è–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–∏
    print("Using FFmpeg at:", FFMPEG_PATH)
    bot.run(TOKEN)
